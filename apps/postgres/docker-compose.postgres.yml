services:
  postgres-main:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ../../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
      - ./init-scripts/databases.conf:/docker-entrypoint-initdb.d/databases.conf:ro
    ports:
      - "5432:5432"
    networks:
      - postgres-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@ragnalab.xyz}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-changeme}
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ragnalab-net
      - postgres-internal
    depends_on:
      - traefik
      - postgres-main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=cloudflare"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "homepage.group=Infrastructure"
      - "homepage.name=pgAdmin"
      - "homepage.icon=pgadmin"
      - "homepage.href=https://pgadmin.${DOMAIN}"
      - "homepage.description=PostgreSQL administration interface"
      - "kuma.pgadmin.http.name=pgAdmin"
      - "kuma.pgadmin.http.url=https://pgadmin.${DOMAIN}"

volumes:
  postgres_data:
    name: postgres_data
  pgadmin_data:
    name: pgadmin_data

networks:
  postgres-internal:
    name: postgres-internal
    driver: bridge
